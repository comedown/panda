configurations {
	mybatisGenerator
}

repositories {
    mavenCentral()
}

dependencies {
	mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.6'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.40'
    mybatisGenerator 'tk.mybatis:mapper:4.0.2'
    mybatisGenerator files('lib/my-mybtis-generator.jar')
}

def getDbProperties = {
    def properties = new Properties()
    file("config.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties
}

apply plugin: 'java'

task mybatisGenerator << {
	def properties = getDbProperties()
	ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.username")
    ant.properties['password'] = properties.getProperty("jdbc.password")
	ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path  // src\main\java
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path  // src\main\resources
	ant.properties['modelPackage'] = properties.getProperty("package.model")
    ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
    ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")
	ant.taskdef(
		name: 'mbgenerator',
		classname: 'org.mybatis.generator.ant.GeneratorAntTask',
		classpath: configurations.mybatisGenerator.asPath
    )
	ant.mbgenerator(overwrite: true,
			configfile: 'generatorConfig.xml', verbose: true) {
		propertyset {
			propertyref(name: 'targetProject')
			propertyref(name: 'userId')
			propertyref(name: 'driverClass')
			propertyref(name: 'connectionURL')
			propertyref(name: 'password')
			propertyref(name: 'src_main_java')
			propertyref(name: 'src_main_resources')
			propertyref(name: 'modelPackage')
			propertyref(name: 'mapperPackage')
			propertyref(name: 'sqlMapperPackage')
		}
    }
}